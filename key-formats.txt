Feraidon AbdulRahimzai
CS338 - Computer Security
October 1, 2025


=====Private Key=====


-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----







Items I expect to be contained in the private key file:

- version 
- modulus
- publicExponent
- privateExponent
- prime1
- prime2
- exponent1
- exponent2
- coefficient
- otherPrimeInfos




--Decoded Private key file--

RSAPrivateKey SEQUENCE (9 elem)
version Version INTEGER 0
modulus INTEGER (3072 bit) 493473268118344718785337715848099950762811018318354674944987946174019…
publicExponent INTEGER 65537
privateExponent INTEGER (3072 bit) 492306166228445220312540252644772738770070494525087589563959319113626…
prime1 INTEGER (1536 bit) 233968758657940285462336737652751034186881621475033202552680801716050…
prime2 INTEGER (1536 bit) 210914171169235945131591119484286472165151208087903351619540705689126…
exponent1 INTEGER (1536 bit) 136435663054923232517724691439571330294643559026372032622118836675195…
exponent2 INTEGER (1536 bit) 210875552220336379522216581537267056603468771990781804398590181733676…
coefficient INTEGER (1534 bit) 443446728028436018814465612423171042638679541639652685261876345270153…


--Steps I took to Decode--

Initially I went to on of the given web decoder. Specifically, https://lapo.it/asn1js/ and after pasting my private key information I was given the decoded information that is just above this.



--Meaning of each Integer--

- modulus is the RSA modulus n.
- publicExponent is the RSA public exponent e.
- privateExponent is the RSA private exponent d.
- prime1 is the prime factor p of n.
- prime2 is the prime factor q of n.
- exponent1 is d mod (p - 1).
- exponent2 is d mod (q - 1).
- coefficient is the CRT coefficient q^(-1) mod p.




--Values--

version: 0x020100
modulus: (3072 bit) 4934732681183447187853377158480999507628110183183546749449879461740191028139723518405863358272084190486794079789167016063761056651022439472715904269053086320301931566083385357423094781907253825275709729453550568788661509902527787750765702698110897025141052700163898590333563041905099054767728906938922724587449861343296209182565802975162028644330652335044549206697323923932245198101503453296110181984347045669456744555387251562810693896567576968991199414037252423354233657216879077704650715866311758735442941871034917426174118966924179709083128758699757688370792561425495239445888871723156213286199508052224104830585793069839259601109636977568692047782790550139418768179522989153556999744432449881406942069233581406952164149294118673889095294889575373145337353806209361541977879471706225650101131245084345616907341237758510009923433555393940196806856240628613574405278386125190308390216531276277640059701800822160536743564707
publicExponent: 0x0203010001
privateExponent: (3072 bit) 4923061662284452203125402526447727387700704945250875895639593191136261498112995759348339992531629591565185628343917448834716654805028444048478130718818818221676013391727785852862303477892794445949256962191312438600184122563545353292347272133419086459523205328930467028292247414526743463979487181187430696842648379302491611590010487665319495198492862214777647988651974194646353289626813842309020490997460648793207209248521129769133295517728631420214269803143012918700476796260885069068824657085819201467180765072750158265960454012891549730107046098139380562090606127181796027362654533344812259773837445811384285934412684236959540900767392878034810089053030177323291640588033225802264818243309626773546298149917975325320362703632700535708484055382491620564077836930911261124847034636343995193395307340571641456016501300907187025071672115208583195620831435030815914619098791469169406671658768039622044158741699869820030121927809
prime1: (1536 bit) 2339687586579402854623367376527510341868816214750332025526808017160505973842575715815309729403194343038038167107510244743410464584895971086634806849203204485880070617828061853916761977901323547989572034068847912223642886731094026403136497548647810386596962529025164144085097240781616738766451884162058715211119993455226238437904218634204702200406242248513959250959048518611320892182541287159978309831349104294176103462770343879719725634040914025939896677158591073
prime2: (1536 bit) 2109141711692359451315911194842864721651512080879033516195407056891260004914226579072695332743624767810421781555733229241159974350411610687390610306508608493772656631861855212826678554273615517395671288461082277103043889971424689748530448169508860496377767913388667977479362242088788997731515147707073713426058411879677206241555959456185421396593263461605791943336119750289972149955298232049699666219022160487340556127608179820486644234643922295325682609178121859
exponent1: (1536 bit) 136435663054923232517724691439571330294643559026372032622118836675195…
exponent2: (1536 bit) 210875552220336379522216581537267056603468771990781804398590181733676…
coefficient: (1534 bit) 443446728028436018814465612423171042638679541639652685261876345270153…



=====Public Key=====

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDZcuFVPrQh0mGmllN33MSNF4qgwXLTcjjdxucbw5M7u0ittNsgjCTk171sKYB1MoZH5Nkblcv2U9Nd+vWNpz45lOoE2ssRF1CyKkiYL6t77dMAq93tm3W99wGg6pBJUFxh004jrKX9jzAZlCISO6XNNImU9LELwbWWqdLT2TFL/TEK0Wt4HVQrLMvrmhRsteT+DdpN/u4d9wDrfpCHai5kz5mXkLT81PT8E4lb7WNvkh+Dbs+WPZfGI4iqr6Vf1U5z5EqgdH/StiPSNv3SXoXWTDCn3GpgsUoXpM4/MwO7yjUAbC1u0x9Wm30G6q30lQRukkR8xhvldR38nMO0Y/00dTHh/wWgIVzKzmuLwQqNtJiz2/fMimCdFrgXr3KNEwHUuptySfzWY6LFeBbj4KrqDP0PCDn4GocplS8nIrJTssSsncVX3D5pd4jVkqebhRyARJcWi4ea1zINzaMlE2TzAdS7tFt9FGG8NAtR2Gm8TwCeB/jMK+bezcXZXASR1aM= gemini@Geminis-MacBook-Air-2.local


For the Public Key I Converted to a PEM format using "ssh-keygen -f id_rsa_homework.pub -e -m pem": 

-----BEGIN RSA PUBLIC KEY-----
MIIBigKCAYEA2XLhVT60IdJhppZTd9zEjReKoMFy03I43cbnG8OTO7tIrbTbIIwk
5Ne9bCmAdTKGR+TZG5XL9lPTXfr1jac+OZTqBNrLERdQsipImC+re+3TAKvd7Zt1
vfcBoOqQSVBcYdNOI6yl/Y8wGZQiEjulzTSJlPSxC8G1lqnS09kxS/0xCtFreB1U
KyzL65oUbLXk/g3aTf7uHfcA636Qh2ouZM+Zl5C0/NT0/BOJW+1jb5Ifg27Plj2X
xiOIqq+lX9VOc+RKoHR/0rYj0jb90l6F1kwwp9xqYLFKF6TOPzMDu8o1AGwtbtMf
Vpt9Buqt9JUEbpJEfMYb5XUd/JzDtGP9NHUx4f8FoCFcys5ri8EKjbSYs9v3zIpg
nRa4F69yjRMB1Lqbckn81mOixXgW4+Cq6gz9Dwg5+BqHKZUvJyKyU7LErJ3FV9w+
aXeI1ZKnm4UcgESXFouHmtcyDc2jJRNk8wHUu7RbfRRhvDQLUdhpvE8Angf4zCvm
3s3F2VwEkdWjAgMBAAE=
-----END RSA PUBLIC KEY-----



What I expect to find in the id_rsa_homework.pub?

- I expect to find the modulus (n) and the Public Exponent (e). We need to find these two value because this is the only information that is required to encrypt data using the RSA algorithm.


How did I decode this file?

- I decoded this file, again, by visiting the website given to us, https://lapo.it/asn1js/, in the assignment.



Decoded Information: 


modulus: (3072 bit) 4934732681183447187853377158480999507628110183183546749449879461740191028139723518405863358272084190486794079789167016063761056651022439472715904269053086320301931566083385357423094781907253825275709729453550568788661509902527787750765702698110897025141052700163898590333563041905099054767728906938922724587449861343296209182565802975162028644330652335044549206697323923932245198101503453296110181984347045669456744555387251562810693896567576968991199414037252423354233657216879077704650715866311758735442941871034917426174118966924179709083128758699757688370792561425495239445888871723156213286199508052224104830585793069839259601109636977568692047782790550139418768179522989153556999744432449881406942069233581406952164149294118673889095294889575373145337353806209361541977879471706225650101131245084345616907341237758510009923433555393940196806856240628613574405278386125190308390216531276277640059701800822160536743564707

Public Exponent: 65537



=====Sanity Check=====

I used a simple python script to make sure that these key complement each other and we are able to encrypt and decrypt.


